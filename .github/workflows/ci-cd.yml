name: Build, Test, and Deploy to ECS

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Build project and run tests
        run: mvn clean verify

      - name: Check test coverage
        run: |
          COVERAGE=$(xmllint --xpath 'string(//counter[@type="LINE"]/@covered)' target/site/jacoco/jacoco.xml)
          MISSED=$(xmllint --xpath 'string(//counter[@type="LINE"]/@missed)' target/site/jacoco/jacoco.xml)
          TOTAL=$((COVERAGE + MISSED))
          PERCENTAGE=$((COVERAGE * 100 / TOTAL))
          echo "Test coverage: $PERCENTAGE%"
          if [ "$PERCENTAGE" -lt 80 ]; then
            echo "Test coverage is below 80%! Current: $PERCENTAGE%"
            exit 1
          fi

  publish-to-ecr:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: us-east-1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME=client-fiap-app
          IMAGE_TAG=latest
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=${{ secrets.AWS_REGION }}
          ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME"
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker tag $ECR_URI:$IMAGE_TAG $ECR_URI:$IMAGE_TAG

      - name: Push Docker image to Amazon ECR
        run: |
          IMAGE_NAME=client-fiap-app
          IMAGE_TAG=latest
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=${{ secrets.AWS_REGION }}
          ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME"
          docker push $ECR_URI:$IMAGE_TAG

  deploy:
    needs: publish-to-ecr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to ECS
        run: |
          ECS_CLUSTER=client-ecs-cluster
          ECS_SERVICE=client-ecs-service
          IMAGE_NAME=client-fiap-app
          IMAGE_TAG=latest
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=${{ secrets.AWS_REGION }}
          ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME"
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
